#pragma warning disable 1591
//------------------------------------------------------------------------------
// <auto-generated>
//     이 코드는 도구를 사용하여 생성되었습니다.
//     런타임 버전:4.0.30319.42000
//
//     파일 내용을 변경하면 잘못된 동작이 발생할 수 있으며, 코드를 다시 생성하면
//     이러한 변경 내용이 손실됩니다.
// </auto-generated>
//------------------------------------------------------------------------------

namespace ChatProtoDatabase
{
	using System.Data.Linq;
	using System.Data.Linq.Mapping;
	using System.Data;
	using System.Collections.Generic;
	using System.Reflection;
	using System.Linq;
	using System.Linq.Expressions;
	using System.ComponentModel;
	using System;
	
	
	[global::System.Data.Linq.Mapping.DatabaseAttribute(Name="ChatProtoDb")]
	public partial class ChatProtoDbDataContext : System.Data.Linq.DataContext
	{
		
		private static System.Data.Linq.Mapping.MappingSource mappingSource = new AttributeMappingSource();
		
    #region 확장성 메서드 정의
    partial void OnCreated();
    partial void InsertChat(Chat instance);
    partial void UpdateChat(Chat instance);
    partial void DeleteChat(Chat instance);
    partial void InsertUser(User instance);
    partial void UpdateUser(User instance);
    partial void DeleteUser(User instance);
    partial void InsertChatRoom(ChatRoom instance);
    partial void UpdateChatRoom(ChatRoom instance);
    partial void DeleteChatRoom(ChatRoom instance);
    partial void InsertChatRoomUser(ChatRoomUser instance);
    partial void UpdateChatRoomUser(ChatRoomUser instance);
    partial void DeleteChatRoomUser(ChatRoomUser instance);
    #endregion
		
		public ChatProtoDbDataContext() : 
				base(global::ChatProtoDatabase.Properties.Settings.Default.ChatProtoDbConnectionString, mappingSource)
		{
			OnCreated();
		}
		
		public ChatProtoDbDataContext(string connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public ChatProtoDbDataContext(System.Data.IDbConnection connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public ChatProtoDbDataContext(string connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public ChatProtoDbDataContext(System.Data.IDbConnection connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public System.Data.Linq.Table<Chat> Chat
		{
			get
			{
				return this.GetTable<Chat>();
			}
		}
		
		public System.Data.Linq.Table<User> User
		{
			get
			{
				return this.GetTable<User>();
			}
		}
		
		public System.Data.Linq.Table<ChatRoom> ChatRoom
		{
			get
			{
				return this.GetTable<ChatRoom>();
			}
		}
		
		public System.Data.Linq.Table<ChatRoomUser> ChatRoomUser
		{
			get
			{
				return this.GetTable<ChatRoomUser>();
			}
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.UserInquiry")]
		public ISingleResult<UserInquiryResult> UserInquiry([global::System.Data.Linq.Mapping.ParameterAttribute(Name="Nickname", DbType="NVarChar(50)")] string nickname, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="Password", DbType="NVarChar(256)")] string password)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), nickname, password);
			return ((ISingleResult<UserInquiryResult>)(result.ReturnValue));
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.ChatInquiry")]
		public ISingleResult<ChatInquiryResult> ChatInquiry([global::System.Data.Linq.Mapping.ParameterAttribute(Name="ChatRoomId", DbType="BigInt")] System.Nullable<long> chatRoomId, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="LatestChatId", DbType="BigInt")] System.Nullable<long> latestChatId, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="Count", DbType="Int")] System.Nullable<int> count)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), chatRoomId, latestChatId, count);
			return ((ISingleResult<ChatInquiryResult>)(result.ReturnValue));
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.ChatRoomCreate")]
		public ISingleResult<ChatRoomCreateResult> ChatRoomCreate([global::System.Data.Linq.Mapping.ParameterAttribute(Name="UserId", DbType="BigInt")] System.Nullable<long> userId, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="Title", DbType="NVarChar(200)")] string title)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), userId, title);
			return ((ISingleResult<ChatRoomCreateResult>)(result.ReturnValue));
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.ChatRoomJoin")]
		public ISingleResult<ChatRoomJoinResult> ChatRoomJoin([global::System.Data.Linq.Mapping.ParameterAttribute(Name="ChatRoomId", DbType="BigInt")] System.Nullable<long> chatRoomId, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="UserId", DbType="BigInt")] System.Nullable<long> userId)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), chatRoomId, userId);
			return ((ISingleResult<ChatRoomJoinResult>)(result.ReturnValue));
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.ChatRoomLeave")]
		public ISingleResult<ChatRoomLeaveResult> ChatRoomLeave([global::System.Data.Linq.Mapping.ParameterAttribute(Name="ChatRoomId", DbType="BigInt")] System.Nullable<long> chatRoomId, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="UserId", DbType="BigInt")] System.Nullable<long> userId)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), chatRoomId, userId);
			return ((ISingleResult<ChatRoomLeaveResult>)(result.ReturnValue));
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.UserCreate")]
		public ISingleResult<UserCreateResult> UserCreate([global::System.Data.Linq.Mapping.ParameterAttribute(Name="Nickname", DbType="NVarChar(50)")] string nickname, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="Password", DbType="NVarChar(256)")] string password)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), nickname, password);
			return ((ISingleResult<UserCreateResult>)(result.ReturnValue));
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.UserDelete")]
		public ISingleResult<UserDeleteResult> UserDelete([global::System.Data.Linq.Mapping.ParameterAttribute(Name="UserId", DbType="BigInt")] System.Nullable<long> userId)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), userId);
			return ((ISingleResult<UserDeleteResult>)(result.ReturnValue));
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.ChatRoomListInquiry")]
		public ISingleResult<ChatRoomListInquiryResult> ChatRoomListInquiry()
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())));
			return ((ISingleResult<ChatRoomListInquiryResult>)(result.ReturnValue));
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.UserChatRoomListInquiry")]
		public ISingleResult<UserChatRoomListInquiryResult> UserChatRoomListInquiry([global::System.Data.Linq.Mapping.ParameterAttribute(Name="UserId", DbType="BigInt")] System.Nullable<long> userId)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), userId);
			return ((ISingleResult<UserChatRoomListInquiryResult>)(result.ReturnValue));
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.ChatRoomInquiry")]
		public ISingleResult<ChatRoomInquiryResult> ChatRoomInquiry([global::System.Data.Linq.Mapping.ParameterAttribute(Name="ChatRoomId", DbType="BigInt")] System.Nullable<long> chatRoomId)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), chatRoomId);
			return ((ISingleResult<ChatRoomInquiryResult>)(result.ReturnValue));
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.ChatRoomUserInquiry")]
		public ISingleResult<ChatRoomUserInquiryResult> ChatRoomUserInquiry([global::System.Data.Linq.Mapping.ParameterAttribute(Name="ChatRoomId", DbType="BigInt")] System.Nullable<long> chatRoomId)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), chatRoomId);
			return ((ISingleResult<ChatRoomUserInquiryResult>)(result.ReturnValue));
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.ChatCreate")]
		public ISingleResult<ChatCreateResult> ChatCreate([global::System.Data.Linq.Mapping.ParameterAttribute(Name="ChatRoomId", DbType="BigInt")] System.Nullable<long> chatRoomId, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="UserId", DbType="BigInt")] System.Nullable<long> userId, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="ChatText", DbType="Text")] string chatText)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), chatRoomId, userId, chatText);
			return ((ISingleResult<ChatCreateResult>)(result.ReturnValue));
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Chat")]
	public partial class Chat : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private long _ChatId;
		
		private long _ChatRoomId;
		
		private long _UserId;
		
		private string _ChatText;
		
		private System.DateTime _ChatTime;
		
		private EntityRef<User> _User;
		
		private EntityRef<ChatRoom> _ChatRoom;
		
    #region 확장성 메서드 정의
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnChatIdChanging(long value);
    partial void OnChatIdChanged();
    partial void OnChatRoomIdChanging(long value);
    partial void OnChatRoomIdChanged();
    partial void OnUserIdChanging(long value);
    partial void OnUserIdChanged();
    partial void OnChatTextChanging(string value);
    partial void OnChatTextChanged();
    partial void OnChatTimeChanging(System.DateTime value);
    partial void OnChatTimeChanged();
    #endregion
		
		public Chat()
		{
			this._User = default(EntityRef<User>);
			this._ChatRoom = default(EntityRef<ChatRoom>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ChatId", AutoSync=AutoSync.OnInsert, DbType="BigInt NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public long ChatId
		{
			get
			{
				return this._ChatId;
			}
			set
			{
				if ((this._ChatId != value))
				{
					this.OnChatIdChanging(value);
					this.SendPropertyChanging();
					this._ChatId = value;
					this.SendPropertyChanged("ChatId");
					this.OnChatIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ChatRoomId", DbType="BigInt NOT NULL")]
		public long ChatRoomId
		{
			get
			{
				return this._ChatRoomId;
			}
			set
			{
				if ((this._ChatRoomId != value))
				{
					if (this._ChatRoom.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnChatRoomIdChanging(value);
					this.SendPropertyChanging();
					this._ChatRoomId = value;
					this.SendPropertyChanged("ChatRoomId");
					this.OnChatRoomIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UserId", DbType="BigInt NOT NULL")]
		public long UserId
		{
			get
			{
				return this._UserId;
			}
			set
			{
				if ((this._UserId != value))
				{
					if (this._User.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnUserIdChanging(value);
					this.SendPropertyChanging();
					this._UserId = value;
					this.SendPropertyChanged("UserId");
					this.OnUserIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ChatText", DbType="Text NOT NULL", CanBeNull=false, UpdateCheck=UpdateCheck.Never)]
		public string ChatText
		{
			get
			{
				return this._ChatText;
			}
			set
			{
				if ((this._ChatText != value))
				{
					this.OnChatTextChanging(value);
					this.SendPropertyChanging();
					this._ChatText = value;
					this.SendPropertyChanged("ChatText");
					this.OnChatTextChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ChatTime", DbType="DateTime NOT NULL")]
		public System.DateTime ChatTime
		{
			get
			{
				return this._ChatTime;
			}
			set
			{
				if ((this._ChatTime != value))
				{
					this.OnChatTimeChanging(value);
					this.SendPropertyChanging();
					this._ChatTime = value;
					this.SendPropertyChanged("ChatTime");
					this.OnChatTimeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="User_Chat", Storage="_User", ThisKey="UserId", OtherKey="UserId", IsForeignKey=true)]
		public User User
		{
			get
			{
				return this._User.Entity;
			}
			set
			{
				User previousValue = this._User.Entity;
				if (((previousValue != value) 
							|| (this._User.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._User.Entity = null;
						previousValue.Chat.Remove(this);
					}
					this._User.Entity = value;
					if ((value != null))
					{
						value.Chat.Add(this);
						this._UserId = value.UserId;
					}
					else
					{
						this._UserId = default(long);
					}
					this.SendPropertyChanged("User");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="ChatRoom_Chat", Storage="_ChatRoom", ThisKey="ChatRoomId", OtherKey="ChatRoomId", IsForeignKey=true)]
		public ChatRoom ChatRoom
		{
			get
			{
				return this._ChatRoom.Entity;
			}
			set
			{
				ChatRoom previousValue = this._ChatRoom.Entity;
				if (((previousValue != value) 
							|| (this._ChatRoom.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._ChatRoom.Entity = null;
						previousValue.Chat.Remove(this);
					}
					this._ChatRoom.Entity = value;
					if ((value != null))
					{
						value.Chat.Add(this);
						this._ChatRoomId = value.ChatRoomId;
					}
					else
					{
						this._ChatRoomId = default(long);
					}
					this.SendPropertyChanged("ChatRoom");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.[User]")]
	public partial class User : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private long _UserId;
		
		private string _Nickname;
		
		private string _Password;
		
		private EntitySet<Chat> _Chat;
		
		private EntitySet<ChatRoomUser> _ChatRoomUser;
		
    #region 확장성 메서드 정의
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnUserIdChanging(long value);
    partial void OnUserIdChanged();
    partial void OnNicknameChanging(string value);
    partial void OnNicknameChanged();
    partial void OnPasswordChanging(string value);
    partial void OnPasswordChanged();
    #endregion
		
		public User()
		{
			this._Chat = new EntitySet<Chat>(new Action<Chat>(this.attach_Chat), new Action<Chat>(this.detach_Chat));
			this._ChatRoomUser = new EntitySet<ChatRoomUser>(new Action<ChatRoomUser>(this.attach_ChatRoomUser), new Action<ChatRoomUser>(this.detach_ChatRoomUser));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UserId", AutoSync=AutoSync.OnInsert, DbType="BigInt NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public long UserId
		{
			get
			{
				return this._UserId;
			}
			set
			{
				if ((this._UserId != value))
				{
					this.OnUserIdChanging(value);
					this.SendPropertyChanging();
					this._UserId = value;
					this.SendPropertyChanged("UserId");
					this.OnUserIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Nickname", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string Nickname
		{
			get
			{
				return this._Nickname;
			}
			set
			{
				if ((this._Nickname != value))
				{
					this.OnNicknameChanging(value);
					this.SendPropertyChanging();
					this._Nickname = value;
					this.SendPropertyChanged("Nickname");
					this.OnNicknameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Password", DbType="NVarChar(256) NOT NULL", CanBeNull=false)]
		public string Password
		{
			get
			{
				return this._Password;
			}
			set
			{
				if ((this._Password != value))
				{
					this.OnPasswordChanging(value);
					this.SendPropertyChanging();
					this._Password = value;
					this.SendPropertyChanged("Password");
					this.OnPasswordChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="User_Chat", Storage="_Chat", ThisKey="UserId", OtherKey="UserId")]
		public EntitySet<Chat> Chat
		{
			get
			{
				return this._Chat;
			}
			set
			{
				this._Chat.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="User_ChatRoomUser", Storage="_ChatRoomUser", ThisKey="UserId", OtherKey="UserId")]
		public EntitySet<ChatRoomUser> ChatRoomUser
		{
			get
			{
				return this._ChatRoomUser;
			}
			set
			{
				this._ChatRoomUser.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_Chat(Chat entity)
		{
			this.SendPropertyChanging();
			entity.User = this;
		}
		
		private void detach_Chat(Chat entity)
		{
			this.SendPropertyChanging();
			entity.User = null;
		}
		
		private void attach_ChatRoomUser(ChatRoomUser entity)
		{
			this.SendPropertyChanging();
			entity.User = this;
		}
		
		private void detach_ChatRoomUser(ChatRoomUser entity)
		{
			this.SendPropertyChanging();
			entity.User = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.ChatRoom")]
	public partial class ChatRoom : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private long _ChatRoomId;
		
		private string _Title;
		
		private EntitySet<Chat> _Chat;
		
		private EntitySet<ChatRoomUser> _ChatRoomUser;
		
    #region 확장성 메서드 정의
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnChatRoomIdChanging(long value);
    partial void OnChatRoomIdChanged();
    partial void OnTitleChanging(string value);
    partial void OnTitleChanged();
    #endregion
		
		public ChatRoom()
		{
			this._Chat = new EntitySet<Chat>(new Action<Chat>(this.attach_Chat), new Action<Chat>(this.detach_Chat));
			this._ChatRoomUser = new EntitySet<ChatRoomUser>(new Action<ChatRoomUser>(this.attach_ChatRoomUser), new Action<ChatRoomUser>(this.detach_ChatRoomUser));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ChatRoomId", AutoSync=AutoSync.OnInsert, DbType="BigInt NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public long ChatRoomId
		{
			get
			{
				return this._ChatRoomId;
			}
			set
			{
				if ((this._ChatRoomId != value))
				{
					this.OnChatRoomIdChanging(value);
					this.SendPropertyChanging();
					this._ChatRoomId = value;
					this.SendPropertyChanged("ChatRoomId");
					this.OnChatRoomIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Title", DbType="NVarChar(200)")]
		public string Title
		{
			get
			{
				return this._Title;
			}
			set
			{
				if ((this._Title != value))
				{
					this.OnTitleChanging(value);
					this.SendPropertyChanging();
					this._Title = value;
					this.SendPropertyChanged("Title");
					this.OnTitleChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="ChatRoom_Chat", Storage="_Chat", ThisKey="ChatRoomId", OtherKey="ChatRoomId")]
		public EntitySet<Chat> Chat
		{
			get
			{
				return this._Chat;
			}
			set
			{
				this._Chat.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="ChatRoom_ChatRoomUser", Storage="_ChatRoomUser", ThisKey="ChatRoomId", OtherKey="ChatRoomId")]
		public EntitySet<ChatRoomUser> ChatRoomUser
		{
			get
			{
				return this._ChatRoomUser;
			}
			set
			{
				this._ChatRoomUser.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_Chat(Chat entity)
		{
			this.SendPropertyChanging();
			entity.ChatRoom = this;
		}
		
		private void detach_Chat(Chat entity)
		{
			this.SendPropertyChanging();
			entity.ChatRoom = null;
		}
		
		private void attach_ChatRoomUser(ChatRoomUser entity)
		{
			this.SendPropertyChanging();
			entity.ChatRoom = this;
		}
		
		private void detach_ChatRoomUser(ChatRoomUser entity)
		{
			this.SendPropertyChanging();
			entity.ChatRoom = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.ChatRoomUser")]
	public partial class ChatRoomUser : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private long _ChatRoomId;
		
		private long _UserId;
		
		private EntityRef<ChatRoom> _ChatRoom;
		
		private EntityRef<User> _User;
		
    #region 확장성 메서드 정의
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnChatRoomIdChanging(long value);
    partial void OnChatRoomIdChanged();
    partial void OnUserIdChanging(long value);
    partial void OnUserIdChanged();
    #endregion
		
		public ChatRoomUser()
		{
			this._ChatRoom = default(EntityRef<ChatRoom>);
			this._User = default(EntityRef<User>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ChatRoomId", DbType="BigInt NOT NULL", IsPrimaryKey=true)]
		public long ChatRoomId
		{
			get
			{
				return this._ChatRoomId;
			}
			set
			{
				if ((this._ChatRoomId != value))
				{
					if (this._ChatRoom.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnChatRoomIdChanging(value);
					this.SendPropertyChanging();
					this._ChatRoomId = value;
					this.SendPropertyChanged("ChatRoomId");
					this.OnChatRoomIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UserId", DbType="BigInt NOT NULL", IsPrimaryKey=true)]
		public long UserId
		{
			get
			{
				return this._UserId;
			}
			set
			{
				if ((this._UserId != value))
				{
					if (this._User.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnUserIdChanging(value);
					this.SendPropertyChanging();
					this._UserId = value;
					this.SendPropertyChanged("UserId");
					this.OnUserIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="ChatRoom_ChatRoomUser", Storage="_ChatRoom", ThisKey="ChatRoomId", OtherKey="ChatRoomId", IsForeignKey=true)]
		public ChatRoom ChatRoom
		{
			get
			{
				return this._ChatRoom.Entity;
			}
			set
			{
				ChatRoom previousValue = this._ChatRoom.Entity;
				if (((previousValue != value) 
							|| (this._ChatRoom.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._ChatRoom.Entity = null;
						previousValue.ChatRoomUser.Remove(this);
					}
					this._ChatRoom.Entity = value;
					if ((value != null))
					{
						value.ChatRoomUser.Add(this);
						this._ChatRoomId = value.ChatRoomId;
					}
					else
					{
						this._ChatRoomId = default(long);
					}
					this.SendPropertyChanged("ChatRoom");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="User_ChatRoomUser", Storage="_User", ThisKey="UserId", OtherKey="UserId", IsForeignKey=true)]
		public User User
		{
			get
			{
				return this._User.Entity;
			}
			set
			{
				User previousValue = this._User.Entity;
				if (((previousValue != value) 
							|| (this._User.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._User.Entity = null;
						previousValue.ChatRoomUser.Remove(this);
					}
					this._User.Entity = value;
					if ((value != null))
					{
						value.ChatRoomUser.Add(this);
						this._UserId = value.UserId;
					}
					else
					{
						this._UserId = default(long);
					}
					this.SendPropertyChanged("User");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	public partial class UserInquiryResult
	{
		
		private long _UserId;
		
		private string _Nickname;
		
		public UserInquiryResult()
		{
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UserId", DbType="BigInt NOT NULL")]
		public long UserId
		{
			get
			{
				return this._UserId;
			}
			set
			{
				if ((this._UserId != value))
				{
					this._UserId = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Nickname", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string Nickname
		{
			get
			{
				return this._Nickname;
			}
			set
			{
				if ((this._Nickname != value))
				{
					this._Nickname = value;
				}
			}
		}
	}
	
	public partial class ChatInquiryResult
	{
		
		private long _ChatId;
		
		private long _ChatRoomId;
		
		private long _UserId;
		
		private string _ChatText;
		
		private System.DateTime _ChatTime;
		
		public ChatInquiryResult()
		{
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ChatId", DbType="BigInt NOT NULL")]
		public long ChatId
		{
			get
			{
				return this._ChatId;
			}
			set
			{
				if ((this._ChatId != value))
				{
					this._ChatId = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ChatRoomId", DbType="BigInt NOT NULL")]
		public long ChatRoomId
		{
			get
			{
				return this._ChatRoomId;
			}
			set
			{
				if ((this._ChatRoomId != value))
				{
					this._ChatRoomId = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UserId", DbType="BigInt NOT NULL")]
		public long UserId
		{
			get
			{
				return this._UserId;
			}
			set
			{
				if ((this._UserId != value))
				{
					this._UserId = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ChatText", DbType="Text NOT NULL", CanBeNull=false, UpdateCheck=UpdateCheck.Never)]
		public string ChatText
		{
			get
			{
				return this._ChatText;
			}
			set
			{
				if ((this._ChatText != value))
				{
					this._ChatText = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ChatTime", DbType="DateTime NOT NULL")]
		public System.DateTime ChatTime
		{
			get
			{
				return this._ChatTime;
			}
			set
			{
				if ((this._ChatTime != value))
				{
					this._ChatTime = value;
				}
			}
		}
	}
	
	public partial class ChatRoomCreateResult
	{
		
		private long _ChatroomId;
		
		private string _Title;
		
		public ChatRoomCreateResult()
		{
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ChatroomId", DbType="BigInt NOT NULL")]
		public long ChatroomId
		{
			get
			{
				return this._ChatroomId;
			}
			set
			{
				if ((this._ChatroomId != value))
				{
					this._ChatroomId = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Title", DbType="NVarChar(200)")]
		public string Title
		{
			get
			{
				return this._Title;
			}
			set
			{
				if ((this._Title != value))
				{
					this._Title = value;
				}
			}
		}
	}
	
	public partial class ChatRoomJoinResult
	{
		
		private int _Result;
		
		public ChatRoomJoinResult()
		{
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Result", DbType="Int NOT NULL")]
		public int Result
		{
			get
			{
				return this._Result;
			}
			set
			{
				if ((this._Result != value))
				{
					this._Result = value;
				}
			}
		}
	}
	
	public partial class ChatRoomLeaveResult
	{
		
		private System.Nullable<int> _RemainUserCount;
		
		public ChatRoomLeaveResult()
		{
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RemainUserCount", DbType="Int")]
		public System.Nullable<int> RemainUserCount
		{
			get
			{
				return this._RemainUserCount;
			}
			set
			{
				if ((this._RemainUserCount != value))
				{
					this._RemainUserCount = value;
				}
			}
		}
	}
	
	public partial class UserCreateResult
	{
		
		private long _UserId;
		
		private string _Nickname;
		
		public UserCreateResult()
		{
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UserId", DbType="BigInt NOT NULL")]
		public long UserId
		{
			get
			{
				return this._UserId;
			}
			set
			{
				if ((this._UserId != value))
				{
					this._UserId = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Nickname", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string Nickname
		{
			get
			{
				return this._Nickname;
			}
			set
			{
				if ((this._Nickname != value))
				{
					this._Nickname = value;
				}
			}
		}
	}
	
	public partial class UserDeleteResult
	{
		
		private int _Result;
		
		public UserDeleteResult()
		{
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Result", DbType="Int NOT NULL")]
		public int Result
		{
			get
			{
				return this._Result;
			}
			set
			{
				if ((this._Result != value))
				{
					this._Result = value;
				}
			}
		}
	}
	
	public partial class ChatRoomListInquiryResult
	{
		
		private long _ChatRoomId;
		
		private string _Title;
		
		public ChatRoomListInquiryResult()
		{
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ChatRoomId", DbType="BigInt NOT NULL")]
		public long ChatRoomId
		{
			get
			{
				return this._ChatRoomId;
			}
			set
			{
				if ((this._ChatRoomId != value))
				{
					this._ChatRoomId = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Title", DbType="NVarChar(200)")]
		public string Title
		{
			get
			{
				return this._Title;
			}
			set
			{
				if ((this._Title != value))
				{
					this._Title = value;
				}
			}
		}
	}
	
	public partial class UserChatRoomListInquiryResult
	{
		
		private long _ChatRoomId;
		
		public UserChatRoomListInquiryResult()
		{
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ChatRoomId", DbType="BigInt NOT NULL")]
		public long ChatRoomId
		{
			get
			{
				return this._ChatRoomId;
			}
			set
			{
				if ((this._ChatRoomId != value))
				{
					this._ChatRoomId = value;
				}
			}
		}
	}
	
	public partial class ChatRoomInquiryResult
	{
		
		private long _ChatRoomId;
		
		private string _Title;
		
		public ChatRoomInquiryResult()
		{
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ChatRoomId", DbType="BigInt NOT NULL")]
		public long ChatRoomId
		{
			get
			{
				return this._ChatRoomId;
			}
			set
			{
				if ((this._ChatRoomId != value))
				{
					this._ChatRoomId = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Title", DbType="NVarChar(200)")]
		public string Title
		{
			get
			{
				return this._Title;
			}
			set
			{
				if ((this._Title != value))
				{
					this._Title = value;
				}
			}
		}
	}
	
	public partial class ChatRoomUserInquiryResult
	{
		
		private long _UserId;
		
		private string _Nickname;
		
		public ChatRoomUserInquiryResult()
		{
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UserId", DbType="BigInt NOT NULL")]
		public long UserId
		{
			get
			{
				return this._UserId;
			}
			set
			{
				if ((this._UserId != value))
				{
					this._UserId = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Nickname", DbType="NVarChar(50)")]
		public string Nickname
		{
			get
			{
				return this._Nickname;
			}
			set
			{
				if ((this._Nickname != value))
				{
					this._Nickname = value;
				}
			}
		}
	}
	
	public partial class ChatCreateResult
	{
		
		private long _ChatId;
		
		private long _ChatRoomId;
		
		private long _UserId;
		
		private string _ChatText;
		
		private System.DateTime _ChatTime;
		
		public ChatCreateResult()
		{
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ChatId", DbType="BigInt NOT NULL")]
		public long ChatId
		{
			get
			{
				return this._ChatId;
			}
			set
			{
				if ((this._ChatId != value))
				{
					this._ChatId = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ChatRoomId", DbType="BigInt NOT NULL")]
		public long ChatRoomId
		{
			get
			{
				return this._ChatRoomId;
			}
			set
			{
				if ((this._ChatRoomId != value))
				{
					this._ChatRoomId = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UserId", DbType="BigInt NOT NULL")]
		public long UserId
		{
			get
			{
				return this._UserId;
			}
			set
			{
				if ((this._UserId != value))
				{
					this._UserId = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ChatText", DbType="Text NOT NULL", CanBeNull=false, UpdateCheck=UpdateCheck.Never)]
		public string ChatText
		{
			get
			{
				return this._ChatText;
			}
			set
			{
				if ((this._ChatText != value))
				{
					this._ChatText = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ChatTime", DbType="DateTime NOT NULL")]
		public System.DateTime ChatTime
		{
			get
			{
				return this._ChatTime;
			}
			set
			{
				if ((this._ChatTime != value))
				{
					this._ChatTime = value;
				}
			}
		}
	}
}
#pragma warning restore 1591
